{"ast":null,"code":"import { throwError } from 'rxjs'; // import throwError\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n  }\n  getProducts() {\n    return this.http.get('http://localhost:5001/api/products').pipe(catchError(err => {\n      console.error(err);\n      return throwError(() => err); // use throwError here\n    }));\n  }\n}\n\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,UAAU,QAAQ,MAAM,CAAC,CAAE;AAChD,SAASC,UAAU,QAAQ,gBAAgB;;;AAM3C,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,WAAW;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,oCAAoC,CAAC,CAACC,IAAI,CACxEN,UAAU,CAACO,GAAG,IAAG;MACfC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClB,OAAOR,UAAU,CAAC,MAAMQ,GAAG,CAAC,CAAC,CAAE;IACjC,CAAC,CAAC,CACH;EACH;;;AAXWN,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAS,SAAdT,cAAc;EAAAU,YAFb;AAAM","names":["throwError","catchError","ProductService","constructor","http","getProducts","get","pipe","err","console","error","factory","providedIn"],"sourceRoot":"","sources":["/Users/arsendeputat/RiderProjects/ECommerceApp/ECommerceApp/ClientApp/src/app/services/product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';  // import throwError\nimport { catchError } from 'rxjs/operators';\nimport { Product } from '../models/product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private http: HttpClient) { }\n\n  getProducts(): Observable<Product[]> {\n    return this.http.get<Product[]>('http://localhost:5001/api/products').pipe(\n      catchError(err => {\n        console.error(err);\n        return throwError(() => err);  // use throwError here\n      })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}